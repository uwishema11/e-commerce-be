definitions:
  Products:
    type: object
    required:
      - productName
      - price
      - quantity
      - description
      - isAvailable
      - userId
    properties:
      productName:
        type: string
      price:
        type: number
      quantity:
        type: number
      description:
        type: string
      isAvailable:
        type: boolean
      userId:
        type: number

paths:
  /api/v1/product/create:
    post:
      tags:
        - Products
      summary: New product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/Products'
      responses:
        '200':
          description: Product  is successfully saved
        '500':
          description: Internal server error
        '403':
          description: Unauthorized
        '401':
          description: Unauthenticated
        '400':
          description: Bad request
  /api/v1/product:
    get:
      tags:
        - Products
      summary: All Products
      responses:
        '200':
          description: Product is successfully saved
        '500':
          description: Internal server error
        '403':
          description: Unauthorized
        '401':
          description: Unauthenticated
        '400':
          description: Bad request
  /api/v1/product/delete/{productId}:
    delete:
      tags:
        - Products
      summary: delete a Product
      parameters:
        - in: path
          name: ProductId
      responses:
        '200':
          description: Product is successful deleted
        '500':
          description: Internal server error
        '403':
          description: Unauthorized
        '401':
          description: Unauthenticated
        '400':
          description: Bad request
  /api/v1/product/update/{ProductId}:
    patch:
      tags:
        - Products
      summary: update a Product
      parameters:
        - in: path
          name: ProductId
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/Products'
      responses:
        '200':
          description: Product is successful updated
        '500':
          description: Internal server error
        '403':
          description: Unauthorized
        '401':
          description: Unauthenticated
        '400':
          description: Bad request
  /api/v1/product/{ProductId}:
    get:
      tags:
        - Products
      summary: Get Product by Id
      parameters:
        - in: path
          name: ProducId
          schema:
            type: string
          required: true
          description: product Id
      responses:
        '200':
          description: Product data
        '500':
          description: Internal server error
        '403':
          description: Unauthorized
        '401':
          description: Unauthenticated
